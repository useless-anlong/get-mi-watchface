name: Manual Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: '版本号 (例如: v1.0.0)'
        required: true
        default: 'v1.0.0'
      release_name:
        description: 'Release 标题'
        required: true
        default: 'Release v1.0.0'
      prerelease:
        description: '是否为预发布版本'
        required: false
        default: 'false'
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 明确授予写入内容的权限
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # 获取完整历史以便生成更新日志

      - name: Generate start.server.bat with dynamic variables
        run: |
          # 获取当前日期时间
          CURRENT_DATE=$(date '+%Y.%m.%d %H:%M')
          
          # 获取版本号（从输入参数）
          VERSION=${{ github.event.inputs.version }}
          
          # 获取当前分支名
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          
          # 获取许可证信息（默认为MIT）
          LICENSE="MIT License"
          
          # 读取原始txt文件
          cat start.server.txt > start.server.bat
          
          # 替换变量
          sed -i "s/set \"APP_VERSION=.*\"/set \"APP_VERSION=$VERSION\"/" start.server.bat
          sed -i "s/set \"APP_LICENSE=.*\"/set \"APP_LICENSE=$LICENSE\"/" start.server.bat
          sed -i "s/Set \"APP_BRANCH=.*\"/Set \"APP_BRANCH=$BRANCH\"/" start.server.bat
          sed -i "s/Set \"APP_DATE=.*\"/Set \"APP_DATE=$CURRENT_DATE\"/" start.server.bat

      - name: Generate changelog
        id: changelog
        run: |
          # 获取最近的标签
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          
          if [ -z "$LATEST_TAG" ]; then
            # 如果没有找到标签，获取所有提交
            CHANGELOG=$(git log --pretty=format:"* %s (%an)" --reverse)
          else
            # 获取从最近标签到现在的提交
            CHANGELOG=$(git log ${LATEST_TAG}..HEAD --pretty=format:"* %s (%an)" --reverse)
          fi
          
          # 如果没有变更，提供默认消息
          if [ -z "$CHANGELOG" ]; then
            CHANGELOG="* 此版本包含一些改进和错误修复"
          fi
          
          # 设置输出变量
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release and Upload Asset
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.inputs.version }}
          name: ${{ github.event.inputs.release_name }}
          body: |
            ## 更新日志
            
            ${{ steps.changelog.outputs.changelog }}
            
            ## 下载
            
            - start.server.bat: 启动服务器脚本
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}
          files: ./start.server.bat
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
